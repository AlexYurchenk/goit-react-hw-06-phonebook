{"version":3,"sources":["redux/phonebook/phonebook-actions.js","components/Filter/Filter.js","components/ContactsList/ContactsList.js","components/Form/Form.js","App.js","redux/phonebook/phonebook-redusers.js","redux/store.js","index.js"],"names":["addContact","createAction","number","name","payload","id","shortid","generate","deleteContact","filterContact","useStyles","makeStyles","TextField","display","marginBottom","Filter","onFilterInputChange","dispatch","useDispatch","classes","filter","useSelector","state","contacts","value","onChange","e","actions","currentTarget","required","fullWidth","className","label","type","variant","placeholder","List","marginTop","ContactsList","onDeleteButtonClick","items","normalizedFilter","toLowerCase","visibleContacts","item","includes","map","ListItem","ListItemAvatar","Avatar","ListItemText","primary","color","ListItemSecondaryAction","IconButton","onClick","edge","Form","flexDirection","justifyContent","Button","Alert","onPhoneFormSubmit","useForm","register","handleSubmit","errors","formState","useState","setName","setNumber","onSubmit","data","helperText","severity","minLength","disableElevation","size","Container","width","padding","Typography","App","maxWidth","align","component","initialItems","JSON","parse","localStorage","getItem","itemReducer","createReducer","repeat","forEach","alert","contact","filterReducer","_","contactsReducer","combineReducers","persistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","finallyStore","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.0c6ef1b5.chunk.js","sourcesContent":["import shortid from \"shortid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addContact = createAction(\"contacts/ADD\", ({ number, name }) => ({\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\nexport const deleteContact = createAction(\"contacts/DELETE\");\r\n\r\nexport const filterContact = createAction(\"contacts/CHANGE_FILTER\");\r\nexport default { deleteContact, filterContact, addContact };\r\n","import TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport * as actions from \"../../redux/phonebook/phonebook-actions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles({\r\n  TextField: {\r\n    display: \"block\",\r\n    marginBottom: 10,\r\n  },\r\n});\r\nexport default function Filter({ onFilterInputChange }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const classes = useStyles();\r\n  const filter = useSelector((state) => state.contacts.filter);\r\n  return (\r\n    <TextField\r\n      value={filter}\r\n      onChange={(e) => dispatch(actions.filterContact(e.currentTarget.value))}\r\n      required\r\n      fullWidth\r\n      className={classes.TextField}\r\n      id=\"filter\"\r\n      label=\"Find contact by name \"\r\n      type=\"text\"\r\n      variant=\"outlined\"\r\n      placeholder=\"enter  contact's name\"\r\n    />\r\n  );\r\n}\r\n","import List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport { connect, useSelector, useDispatch } from \"react-redux\";\r\nimport * as actions from \"../../redux/phonebook/phonebook-actions\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  List: {\r\n    marginTop: 20,\r\n  },\r\n});\r\nexport default function ContactsList({ onDeleteButtonClick }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const classes = useStyles();\r\n  const items = useSelector((state) => state.contacts.items);\r\n  const filter = useSelector((state) => state.contacts.filter);\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  const visibleContacts = items.filter((item) =>\r\n    item.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n  return (\r\n    <List className={classes.List}>\r\n      {visibleContacts ? (\r\n        visibleContacts.map(({ name, number, id }) => (\r\n          <ListItem key={id}>\r\n            <ListItemAvatar>\r\n              <Avatar>\r\n                <AccountCircleIcon aria-label=\"person\" />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText primary={name} />\r\n            <ListItemText color=\"primary\" primary={number} />\r\n            <ListItemSecondaryAction>\r\n              <IconButton\r\n                id={id}\r\n                onClick={(e) => {\r\n                  const { id } = e.currentTarget;\r\n                  return dispatch(actions.deleteContact(id));\r\n                }}\r\n                edge=\"end\"\r\n                aria-label=\"delete\"\r\n              >\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        ))\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </List>\r\n  );\r\n}\r\n","import Alert from \"@material-ui/lab/Alert\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { connect, useSelector, useDispatch } from \"react-redux\";\r\nimport * as actions from \"../../redux/phonebook/phonebook-actions\";\r\nconst useStyles = makeStyles({\r\n  TextField: {\r\n    display: \"block\",\r\n    marginBottom: 10,\r\n  },\r\n  Form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    marginBottom: 30,\r\n  },\r\n  Button: {\r\n    display: \"block\",\r\n  },\r\n\r\n  Alert: {\r\n    marginTop: 20,\r\n    marginBottom: 30,\r\n  },\r\n});\r\nexport default function Form({ onPhoneFormSubmit }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const classes = useStyles();\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const onSubmit = (data) => {\r\n    dispatch(actions.addContact(data));\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)} className={classes.Form}>\r\n      <TextField\r\n        {...register(\"name\", {\r\n          required: true,\r\n        })}\r\n        fullWidth\r\n        className={classes.TextField}\r\n        id=\"name\"\r\n        label=\"name\"\r\n        onChange={(e) => setName(e.currentTarget.value)}\r\n        type=\"text\"\r\n        value={name}\r\n        variant=\"outlined\"\r\n        placeholder=\"enter  contact's name\"\r\n        helperText=\"The name can only consist of letters, apostrophes, dashes and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan, etc.\"\r\n      />\r\n      {errors.name && (\r\n        <Alert className={classes.Alert} severity=\"error\">\r\n          This field is required\r\n        </Alert>\r\n      )}\r\n      <TextField\r\n        value={number}\r\n        {...register(\"number\", {\r\n          required: true,\r\n          minLength: 10,\r\n        })}\r\n        onChange={(e) => setNumber(e.currentTarget.value)}\r\n        required\r\n        placeholder=\"enter  contact's number\"\r\n        fullWidth\r\n        className={classes.TextField}\r\n        id=\"number\"\r\n        label=\"number\"\r\n        type=\"phone\"\r\n        variant=\"outlined\"\r\n        helperText=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n      />\r\n      {errors.number && (\r\n        <Alert className={classes.Alert} severity=\"error\">\r\n          This field is required, it must be at least 10 characters long and\r\n          include numbers, spaces, + and parentheses\r\n        </Alert>\r\n      )}\r\n      <Button\r\n        type=\"submit\"\r\n        disableElevation\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        size=\"large\"\r\n      >\r\n        Add contact\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n\r\n","import Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n// \"Это импорты для компонента списка\"\n\nimport Filter from \"./components/Filter\";\nimport ContactsList from \"./components/ContactsList\";\nimport Form from \"./components/Form\";\nconst useStyles = makeStyles({\n  Container: {\n    width: 400,\n    padding: 15,\n  },\n  Typography: {\n    marginBottom: 20,\n  },\n});\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <Container className={classes.Container} maxWidth=\"sm\">\n      <Typography\n        className={classes.Typography}\n        color=\"primary\"\n        align=\"left\"\n        variant=\"h1\"\n        component=\"h1\"\n      >\n        Phonebook\n      </Typography>\n      <Form />\n      <Typography\n        className={classes.Typography}\n        color=\"primary\"\n        align=\"left\"\n        variant=\"h3\"\n        component=\"h2\"\n      >\n        Phonebook\n      </Typography>\n      <Filter />\n      <ContactsList />\n    </Container>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from \"./phonebook-actions\";\r\nconst initialItems = JSON.parse(localStorage.getItem(\"contacts\"))\r\n  ? JSON.parse(localStorage.getItem(\"contacts\"))\r\n  : [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n    ];\r\nconst initialFilter = \"\";\r\nconst itemReducer = createReducer(initialItems, {\r\n  [actions.addContact]: (state, { payload }) => {\r\n    let repeat = false;\r\n    state.forEach((e) => {\r\n      if (e.name.toLowerCase().includes(payload.name.toLowerCase())) {\r\n        alert(\"this contact has already been added to the phonebook\");\r\n        return (repeat = true);\r\n      }\r\n    });\r\n    if (repeat === true) {\r\n      return state;\r\n    }\r\n    return [...state, payload];\r\n  },\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter((contact) => contact.id !== payload),\r\n});\r\nconst filterReducer = createReducer(initialFilter, {\r\n  [actions.filterContact]: (_, { payload }) => payload,\r\n});\r\n\r\nexport const contactsReducer = combineReducers({\r\n  items: itemReducer,\r\n  filter: filterReducer,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport { contactsReducer } from \"./phonebook/phonebook-redusers\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst persistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(persistConfig, contactsReducer),\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\nlet persistor = persistStore(store);\r\n\r\nconst finallyStore = {\r\n  store,\r\n  persistor,\r\n};\r\nexport default finallyStore;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport finallyStore from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={finallyStore.store}>\n      <PersistGate loading={null} persistor={finallyStore.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}